Description: Skip already passed tests on subsequent pytest runs
  This is based on the mechanism in Spyder.
Forwarded: not-needed
Origin: https://github.com/spyder-ide/spyder/blob/5.x/conftest.py
Author: Julian Gilbey <jdg@debian.org>
Last-Update: 2024-07-07

--- a/tests/conftest.py
+++ b/tests/conftest.py
@@ -5,4 +5,46 @@
 """pytest configuration.
 """
 
+import os
+import re
+
+import pytest
+
+
 pytest_plugins = ["tests.pytest_fixtures", "tests.pytest_hooks"]
+
+
+def get_passed_tests():
+    """
+    Get the list of passed tests by inspecting the log generated by pytest.
+
+    This is useful on CIs to restart the test suite from the point where a
+    segfault was thrown by it.
+    """
+    # This assumes the pytest log is placed next to this file. That's where
+    # we put it on CIs.
+    tests = set()
+    if os.path.isfile('pytest_log.txt'):
+        # Detect all tests that passed before.
+        test_re1 = re.compile(r' (SKIPPED|PASSED|XFAIL) (test\S*)')
+        test_re2 = re.compile(r'(test\S*) [^ ]*(SKIPPED|PASSED|XFAIL)')
+        with open('pytest_log.txt') as logfile:
+            for line in logfile:
+                if match := test_re1.search(line):
+                    tests.add(match.group(2))
+                elif match := test_re2.match(line):
+                    tests.add(match.group(1))
+
+    return tests
+
+
+def pytest_collection_modifyitems(config, items):
+    """
+    Skip tests that passed on a previous run.
+    """
+    passed_tests = get_passed_tests()
+    skip_passed = pytest.mark.skip(reason="Test passed in previous runs")
+
+    for item in items:
+        if item.nodeid in passed_tests:
+            item.add_marker(skip_passed)
--- a/pytest.ini
+++ b/pytest.ini
@@ -2,4 +2,4 @@
 testpaths=tests
 timeout=30
 timeout_method=thread
-addopts=-n8
+addopts=-vv
